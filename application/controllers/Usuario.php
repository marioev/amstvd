<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Usuario extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Usuario_model');
    } 

    /*
     * Listing of usuario
     */
    function index()
    {
        $data['usuario'] = $this->Usuario_model->get_all_usuario();
        
        $data['_view'] = 'usuario/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new usuario
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('usuario_nombre','Usuario Nombre','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'estado_id' => $this->input->post('estado_id'),
				'tipousuario_id' => $this->input->post('tipousuario_id'),
				'usuario_nombre' => $this->input->post('usuario_nombre'),
				'usuario_email' => $this->input->post('usuario_email'),
				'usuario_login' => $this->input->post('usuario_login'),
				'usuario_clave' => $this->input->post('usuario_clave'),
				'usuario_imagen' => $this->input->post('usuario_imagen'),
            );
            
            $usuario_id = $this->Usuario_model->add_usuario($params);
            redirect('usuario/index');
        }
        else
        {
			$this->load->model('Estado_model');
			$data['all_estado'] = $this->Estado_model->get_all_estado();

			$this->load->model('Tipo_usuario_model');
			$data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();
            
            $data['_view'] = 'usuario/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a usuario
     */
    function edit($usuario_id)
    {   
        // check if the usuario exists before trying to edit it
        $data['usuario'] = $this->Usuario_model->get_usuario($usuario_id);
        
        if(isset($data['usuario']['usuario_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('usuario_nombre','Usuario Nombre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'estado_id' => $this->input->post('estado_id'),
					'tipousuario_id' => $this->input->post('tipousuario_id'),
					'usuario_nombre' => $this->input->post('usuario_nombre'),
					'usuario_email' => $this->input->post('usuario_email'),
					'usuario_login' => $this->input->post('usuario_login'),
					'usuario_clave' => $this->input->post('usuario_clave'),
					'usuario_imagen' => $this->input->post('usuario_imagen'),
                );

                $this->Usuario_model->update_usuario($usuario_id,$params);            
                redirect('usuario/index');
            }
            else
            {
				$this->load->model('Estado_model');
				$data['all_estado'] = $this->Estado_model->get_all_estado();

				$this->load->model('Tipo_usuario_model');
				$data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();

                $data['_view'] = 'usuario/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The usuario you are trying to edit does not exist.');
    } 

    /*
     * Deleting usuario
     */
    function remove($usuario_id)
    {
        $usuario = $this->Usuario_model->get_usuario($usuario_id);

        // check if the usuario exists before trying to delete it
        if(isset($usuario['usuario_id']))
        {
            $this->Usuario_model->delete_usuario($usuario_id);
            redirect('usuario/index');
        }
        else
            show_error('The usuario you are trying to delete does not exist.');
    }
    
}
